-- How many distinct terms are in the sequence generated by a^b for 2 ≤ a ≤
-- 100 and 2 ≤ b ≤ 100?
import qualified Data.List as List

-- Nice readable list comprehension
terms :: Integer -> [Integer]
terms n = [a ^ b | a <- [2..n], b <- [2..n]]

-- Equivalent incomprehensible functor magic
-- We lift (^) and sequentially apply the arguments
termsF :: Integer -> [Integer]
termsF n = pure (^) <*> [2..n] <*> [2..n]

-- Get the number of unique terms in the sequence
solve :: Integer -> Int
solve = length . uniq . termsF
  where 
    uniq = List.map head . List.group . List.sort

main :: IO ()
main = putStrLn $ show $ solve 100

